/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sistemabancario;

import java.awt.Color;
import java.beans.PropertyVetoException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;
import sistemabancario.nucleo.Validador;

/**
 *
 * @author Peterson Mashni
 */
public class FrmPadrao extends javax.swing.JInternalFrame {

    public final FrmPrincipal frmPrincipal;
    public final SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
    public final SimpleDateFormat mesAnoFormat = new SimpleDateFormat("MM/yy");
    public final SimpleDateFormat timeFormat = new SimpleDateFormat("HH:mm:ss");
    public final SimpleDateFormat datetimeFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
    public DecimalFormat decimalFormat = new DecimalFormat("#,##0.00");
    public Validador validador = new Validador(Color.decode("0xFF9696"));
    public DefaultFormatterFactory cpfFormatter;
    public DefaultFormatterFactory cnpjFormatter;

    /**
     * Creates new form FrmPadrao
     *
     * @param frmPrincipal
     */
    public FrmPadrao(FrmPrincipal frmPrincipal) {
        super(null, true, true, true);
        initComponents();
        this.frmPrincipal = frmPrincipal;
        frmPrincipal.jdPanel.add(this);
        this.setVisible(true);
        try {
            this.cpfFormatter = new DefaultFormatterFactory(new MaskFormatter("###.###.###-##"));
        } catch (ParseException ex) {
        }
        try {
            this.cnpjFormatter = new DefaultFormatterFactory(new MaskFormatter("##.###.###/####-##"));
        } catch (ParseException ex) {
        }
    }

    public void fecharForm() {
        try {
            this.setClosed(true);
        } catch (PropertyVetoException ex) {
        }
    }

    public void setEnabledCampos(JComponent[] campos, Boolean valor) {
        for (JComponent c : campos) {
            c.setEnabled(valor);
        }
    }

    public void setEnabledCampos(JComponent[] campos, Boolean valor, JComponent[] ignorarCampos) {
        ArrayList<JComponent> ignorados = new ArrayList<JComponent>(Arrays.asList(ignorarCampos));
        for (JComponent c : campos) {
            if (!ignorados.contains(c)) {
                c.setEnabled(valor);
            }
        }
    }

    public void clearCampos(JComponent[] campos) {
        for (JComponent c : campos) {
            if (c instanceof JTextField) {
                ((JTextField) c).setText("");
            } else if (c instanceof JRadioButton) {
                ((JRadioButton) c).setSelected(false);
            } else if (c instanceof JComboBox) {
                ((JComboBox) c).setSelectedItem(null);
            } else {
                JOptionPane.showConfirmDialog(null, "Tipo nÃ£o tratado em FrmPadrao.clearCampos()");
            }
        }
        validador.resetValidacoes();
    }

    public String ajusta(String str, int larg) {
        if (str.length() > larg) {
            str = str.subSequence(0, larg).toString();
        }
        return str + String.join("", Collections.nCopies(larg - str.length(), " "));
    }

    public String ajustaDireita(String str, int larg) {
        if (str.length() > larg) {
            str = str.subSequence(0, larg).toString();
        }
        return String.join("", Collections.nCopies(larg - str.length(), " ")) + str;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 394, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 274, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
